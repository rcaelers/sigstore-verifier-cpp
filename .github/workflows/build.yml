name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-msys2-clang64:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: clang64
          install: >-
            git
            mingw-w64-clang-x86_64-boost
            mingw-w64-clang-x86_64-clang
            mingw-w64-clang-x86_64-cmake
            mingw-w64-clang-x86_64-compiler-rt
            mingw-w64-clang-x86_64-lld
            mingw-w64-clang-x86_64-ninja
            mingw-w64-clang-x86_64-openssl
            mingw-w64-clang-x86_64-spdlog
            tar
            xz

      - shell: msys2 {0}
        run: |
          mkdir _build _deploy
          export MINGW_ROOT=/c/msys64
          export MSYSTEM=CLANG64
          cmake -GNinja -B_build -H. -DCMAKE_TOOLCHAIN_FILE=cmake/toolchains/msys2.cmake -DCMAKE_INSTALL_PREFIX=_deploy -DWITH_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}
          ninja -C _build -v install
          cd _build
          ctest -V

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            ninja-build \
            libboost-all-dev \
            libssl-dev \
            libspdlog-dev \
            pkg-config

      - name: Build and test
        run: |
          mkdir _build _deploy
          cmake -GNinja -B_build -H. -DCMAKE_INSTALL_PREFIX=_deploy -DWITH_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}
          ninja -C _build -v install
          cd _build
          ctest -V

  build-macos:
    runs-on: macos-15
    strategy:
      matrix:
        configuration: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          brew update
          brew install \
            cmake \
            ninja \
            boost \
            openssl \
            spdlog

      - name: Build and test
        run: |
          mkdir _build _deploy
          cmake -GNinja -B_build -H. -DCMAKE_INSTALL_PREFIX=_deploy -DWITH_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}
          ninja -C _build -v install
          cd _build
          ctest -V
